{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/Profile.js","components/Statistics.js","components/FriendListItem.js","components/FriendList.js","components/TransactionHistory/TransactionHistoryItem.js","components/TransactionHistory/TransactionHistoryStyled.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","styles","profile","src","alt","label","quantity","followers","views","likes","defaultProps","imgUrl","generateColor","Math","floor","random","toString","Section","styled","section","Title","h2","ListItem","li","List","ul","Statistics","title","map","stat","style","backgroundColor","percentage","id","Online","span","props","isOnline","Picture","img","FriendListItem","width","FriendList","friends","class","friend","key","TransactionHistoryItem","type","amount","currency","Table","table","TransactionHistory","items","item","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a690914b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__18Nsx\",\"avatar\":\"Profile_avatar__1ClOs\",\"name\":\"Profile_name__2dY-B\",\"tag\":\"Profile_tag__1JnkA\",\"location\":\"Profile_location__6M8c7\",\"stats\":\"Profile_stats__3jelS\",\"label\":\"Profile_label__2DD_q\",\"quantity\":\"Profile_quantity__3vPwv\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css';\r\n\r\nfunction Profile({avatar, name, tag, location, stats}) {\r\n    return (\r\n        <div className={styles.profile}>\r\n  <div className=\"description\">\r\n    <img\r\n      src={avatar}\r\n      alt={name}\r\n      className={styles.avatar}\r\n    />\r\n    <p className={styles.avatar}>{name}</p>\r\n    <p className={styles.tag}>{tag}</p>\r\n    <p className={styles.location}>{location}</p>\r\n  </div>\r\n\r\n  <ul className={styles.stats}>\r\n    <li>\r\n      <span className={styles.label}>Followers</span>\r\n      <span className={styles.quantity}>{stats.followers}</span>\r\n    </li>\r\n   <li>\r\n      <span className={styles.label}>Views</span>\r\n      <span className={styles.quantity}>{stats.views}</span>\r\n    </li>\r\n    <li>\r\n      <span className={styles.label}>Likes</span>\r\n      <span className={styles.quantity}>{stats.likes}</span>\r\n    </li>\r\n  </ul>\r\n</div>\r\n    )}\r\n\r\n    Profile.defaultProps = {\r\n        imgUrl:\r\n          'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder',\r\n        name: 'user,'\r\n      };\r\n\r\n    Profile.propTypes = {\r\n        name: PropTypes.string.isRequired,\r\n        tag: PropTypes.string,\r\n        location: PropTypes.string,\r\n        avatar: PropTypes.string,\r\n         stats: PropTypes.objectOf(\r\n        PropTypes.exact({\r\n            followers: PropTypes.string.isRequired,\r\n            views: PropTypes.string.isRequired,\r\n            likes: PropTypes.string.isRequired,\r\n        }),\r\n      ).isRequired,\r\n    };\r\n\r\nexport default Profile;    ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from \"styled-components\";\r\n\r\nfunction generateColor()  {\r\n  return '#' + Math.floor(Math.random()*16777215).toString(16)\r\n}\r\n\r\nconst Section = styled.section`\r\nborder: grey solid 1px;\r\nwidth: fit-content;\r\nheight: fit-content;\r\ndisplay: block;\r\nmargin: 0 auto;\r\n`\r\nconst Title = styled.h2`\r\ntext-align: center;\r\nmargin: 0;\r\n`\r\n\r\nconst ListItem = styled.li`\r\nbackground-color: ${generateColor()};\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\npadding: 20px 20px;\r\n\r\n` \r\nconst List = styled.ul`\r\nlist-style: none;\r\ndisplay: flex;\r\nmargin: 0;\r\n`\r\n\r\nfunction Statistics ({title, stats}) {\r\nreturn (\r\n  <Section>\r\n  {title && (\r\n    <Title>{title}</Title>)\r\n   }\r\n  <List className=\"stat-list\">\r\n    {stats.map(stat => (\r\n    <ListItem key={stat.id} style= {{backgroundColor: generateColor()}}>\r\n      <span className=\"label\">{stat.label}</span>\r\n      <span className=\"percentage\">{stat.percentage}</span>\r\n    </ListItem>))}\r\n  </List>\r\n</Section>\r\n    )\r\n}\r\n\r\nStatistics.defaultProps = {\r\n    title: ' ',\r\n};\r\n\r\n\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired,\r\n        })\r\n    )\r\n}\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from \"styled-components\";\r\n\r\nconst Online = styled.span`\r\ndisplay: inline-block;\r\nheight: 15px;\r\nwidth: 15px;\r\nborder-radius: 50%;\r\nbackground-color: ${props => (props.isOnline ? 'green': 'red')};\r\nmargin-right: 20px;\r\n`\r\nconst List = styled.li`\r\ndisplay: flex;\r\nwidth: 300px;\r\nheight: 80px;\r\npadding: 0 20px;\r\nmargin-bottom: 20px;\r\nbackground-color: beige;\r\nbox-shadow: 0px 10px 13px -7px #000000, 5px 5px 15px 5px rgba(0,0,0,0); \r\nalign-items: center;\r\njustify-content: flex-start;\r\n}\r\n`\r\nconst Picture = styled.img`\r\nborder-radius: 50%;\r\nmargin-right: 20px;\r\n`\r\n\r\nfunction FriendListItem ({name, avatar, isOnline}) {\r\n    return (\r\n  <List className=\"item\">\r\n  <Online isOnline={isOnline}>\r\n  </Online>\r\n  <Picture className='avatar' src= {avatar} alt= {name} width=\"48\" />\r\n  <p className=\"name\">{name}</p>\r\n</List>\r\n    )\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    isOnline: PropTypes.bool.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n}\r\nexport default FriendListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from \"./FriendListItem\";\r\n\r\nfunction FriendList ({friends}) {\r\n   return (\r\n    <ul class=\"friend-list\">\r\n     {friends.map((friend) => (\r\n      <FriendListItem {...friend} key={friend.id}/>\r\n  ))}\r\n</ul>)\r\n    \r\n}\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(PropTypes.object),\r\n  };\r\n\r\n export default FriendList; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst TransactionHistoryItem = ({ type, amount, currency }) => {\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>{type}</td>\r\n        <td>{amount}</td>\r\n        <td>{currency}</td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nTransactionHistoryItem.propTypes = {\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string,\r\n  currency: PropTypes.string,\r\n};\r\n\r\nexport default TransactionHistoryItem;","import styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\nborder-collapse: collapse;\r\nwidth: 80%;\r\ntext-align: center;\r\n    tbody tr:nth-child(even){\r\n        background-color: red;\r\n        }\r\n    th {\r\n        border: 1px solid #999;\r\n        padding: 0.5rem;\r\n        text-align: center;\r\n        background-color: antiquewhite; \r\n    }    \r\n    td {\r\n        border: 1px solid #999;\r\n        padding: 0.5rem;\r\n        text-align: center;\r\n    }\r\n`\r\n\r\nexport default  Table;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TransactionHistoryItem from './TransactionHistoryItem';\r\nimport  Table  from './TransactionHistoryStyled'\r\n\r\n\r\nfunction TransactionHistory ({items}) {\r\n    return (\r\n        <Table>\r\n  <thead>\r\n    <tr>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </thead>\r\n{items.map(item => (\r\n<TransactionHistoryItem {...item} key={item.id} />\r\n))}\r\n  </Table>\r\n  )  \r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n  };\r\n\r\nexport default TransactionHistory;","import React from 'react';\r\nimport Profile from './Profile/Profile'\r\nimport Statistics from './Statistics'\r\nimport FriendList from \"./FriendList\";\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory'\r\nimport user from '../data/user.json'\r\nimport statisticalData from '../data/statisticalData.json'\r\nimport friends from '../data/friends.json'\r\nimport transactions from '../data/transactions.json';\r\n\r\n\r\nexport default function App () {\r\n   return ( \r\n    <>\r\n   <Profile\r\n  name={user.name}\r\n  tag={user.tag}\r\n  location={user.location}\r\n  avatar={user.avatar}\r\n  stats={user.stats}\r\n/>\r\n\r\n<Statistics title=\"Upload stats\" stats={statisticalData} />;\r\n<Statistics stats={statisticalData} />;\r\n  \r\n<FriendList friends={friends} /> \r\n\r\n<TransactionHistory items={transactions} />;\r\n  </>\r\n   )  \r\n}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}